swagger: "2.0"
info:
  version: 1.0.0
  title: SmartShopper API
  description: API for the SmartShopper Backend. Authorization through a HTTP Basic Auth header

host: api.tecfuture.de:3000
basePath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /lists:
    get:
      description: |
        Returns all lists where owner is this user
      operationId: findLists
      parameters:
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: lists response
          schema:
            type: array
            items:
              $ref: '#/definitions/List'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Creates a new list
      operationId: addList
      parameters:
        - name: list
          in: body
          description: List to add
          required: true

          schema:
            type: array
            items:
              $ref: '#/definitions/NewList'
      responses:
        200:
          description: list response
          schema:
            $ref: '#/definitions/List'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'

  /lists/{id}:
    delete:
      description: deletes a single list based on the ID supplied
      operationId: deleteList
      parameters:
        - name: id
          in: path
          description: ID of list to delete
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: list deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'

  /search/{query}:
    get:
      description: Returns a product list based on the query
      operationId: find products by name
      parameters:
        - name: query
          in: path
          description: Name of product to search for
          required: true
          type: string
      responses:
        200:
          description: return found products
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'


  /products/import:
    post:
      description: Imports new products. Duplicates not allowed
      operationId: addProducts
      parameters:
        - name: products
          in: body
          description: Products to add
          required: true

          schema:
            type: array
            items:
              $ref: '#/definitions/NewProduct'
      responses:
        200:
          description: imported products
          schema:
            type: array
            items:
              $ref: '#/definitions/NewProduct'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'

  /products:
    get:
      description: Returns all products
      operationId: getProducts

      responses:
        200:
          description: imported products
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'


  /user/register:
    post:
      description: Register new user
      operationId: registerUser
      parameters:
        - name: Authorization
          in: header
          description: basic auth
          required: true
          type: string
          format: string

      responses:
        200:
          description: imported products
          schema:
            type: string
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'

definitions:
  List:
    allOf:
      - $ref: '#/definitions/Product'
      - required:
        - _id
        - owner
        - products
        properties:
          _id:
            type: integer
            format: int64
          owner:
            type: string
          products:
            type: array
            items:
              $ref: '#/definitions/Product'

  NewList:
    allOf:
      - required:
        - name
        - owner
        - products
        properties:
          name:
            type: string
          owner:
            type: string
          products:
            type: array
            items:
              $ref: '#/definitions/Product'

  Product:
    required:
      - name
      - _id

    properties:
      name:
        type: string
      _id:
        type: integer
        format: int64

  NewProduct:
    required:
      - name
    properties:
      name:
        type: string

  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
